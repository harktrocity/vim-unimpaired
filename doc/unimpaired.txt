*unimpaired.txt*  Pairs of handy bracket mappings

Author:  Tim Pope <http://tpo.pe/>
License: Same terms as Vim itself (see |license|)
                                                (mod by harktrocity)

This plugin is only available if 'compatible' is not set.

INTRODUCTION                                    *unimpaired*

This plugin provides several pairs of bracket maps.

NEXT AND PREVIOUS                               *unimpaired-next*

The following maps all correspond to normal mode commands.  If a count is
given, it becomes an argument to the command.  A mnemonic for the "a" commands
is "args" and for the "q" commands is "quickfix".

*[a*     |:previous|
*]a*     |:next|
*[A*     |:first|
*]A*     |:last|
*[b*     |:bprevious|
*]b*     |:bnext|
*[B*     |:bfirst|
*]B*     |:blast|

                                                *[n*
[n                      Go to the previous SCM conflict marker or diff/patch
                        hunk.  Try d[n inside a conflict.

                                                *]n*
]n                      Go to the next SCM conflict marker or diff/patch hunk.
                        Try d]n inside a conflict.

LINE OPERATIONS                                 *unimpaired-lines*

                                                *[<Space>*
[<Space>                Add [count] blank lines above the cursor.

                                                *]<Space>*
]<Space>                Add [count] blank lines below the cursor.

                                                *[e* *v_[e*
[e                      Exchange the current line with [count] lines above it.

                                                *]e* *v_]e*
]e                      Exchange the current line with [count] lines below it.

OPTION TOGGLING                                 *unimpaired-toggling*

On	Off	Toggle	Option
*[ob*	*]ob*	*yob*	'background' (dark is off, light is on)
*[oc*	*]oc*	*yoc*	'cursorline'
*[od*	*]od*	*yod*	'diff' (actually |:diffthis| / |:diffoff|)
*[oh*	*]oh*	*yoh*	'hlsearch'
*[oi*	*]oi*	*yoi*	'ignorecase'
*[ol*	*]ol*	*yol*	'list'
*[on*	*]on*	*yon*	'number'
*[or*	*]or*	*yor*	'relativenumber'
*[os*	*]os*	*yos*	'spell'
*[ot*	*]ot*	*yot*	'colorcolumn' ("+1" or last used value)
*[ou*	*]ou*	*you*	'cursorcolumn'
*[ov*	*]ov*	*yov*	'virtualedit'
*[ow*	*]ow*	*yow*	'wrap'
*[ox*	*]ox*	*yox*	'cursorline' 'cursorcolumn' (x as in crosshairs)

PASTING                                         *unimpaired-pasting*

|]p|, |[p|, |[P|, and |]P| have also been remapped to force linewise pasting,
while preserving their usual indent matching behavior.

                                                *[op* *]op* *yop*
A toggle has not been provided for 'paste' because the typical use case of
wrapping of a solitary insertion is inefficient:  You toggle twice, but
you only paste once (YOPO).  Instead, press [op, ]op, or yop to invoke |O|,
|o|, or |0||C| with 'paste' already set.  Leaving insert mode sets 'nopaste'
automatically.

 vim:tw=78:et:ft=help:norl:
